{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tdegi\\\\OneDrive\\\\Desktop\\\\Bootcamp\\\\Repository\\\\fifth-street\\\\client\\\\src\\\\components\\\\ProductList\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { Image, Container, Dropdown } from 'react-bootstrap';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport ProductItem from '../ProductItem';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport { idbPromise } from '../../utils/helpers';\nimport CategoryMenu from '../CategoryMenu';\n// import Sort from '../Sort';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const {\n    currentCategory\n  } = state;\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  useEffect(() => {\n    //if there's data to be stored\n    if (data) {\n      //store it in the global state object\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      //but also take each product and save it to IndexedDB using the helper function\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n      //add else if to check if 'loading' is undefined in 'useQuery()' hook\n    } else if (!loading) {\n      //since we're offline, get all of the data from the 'products' store\n      idbPromise('products', 'get').then(products => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: require(`../../assets/logo.jpg`),\n    fluid: true,\n    className: \"background-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CategoryMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Our Products:\"), state.products.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, filterProducts().map(product => /*#__PURE__*/React.createElement(ProductItem\n  // key={product._id}\n  , {\n    _id: product._id,\n    image: product.image,\n    name: product.name,\n    price: product.price,\n    quantity: product.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"You haven't added any products yet!\"), loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 20\n    }\n  }) : null));\n}\nexport default ProductList;","map":{"version":3,"names":["React","useEffect","Image","Container","Dropdown","useQuery","useStoreContext","UPDATE_PRODUCTS","ProductItem","QUERY_PRODUCTS","spinner","idbPromise","CategoryMenu","ProductList","state","dispatch","currentCategory","loading","data","type","products","forEach","product","then","filterProducts","filter","category","_id","require","length","map","image","name","price","quantity"],"sources":["C:/Users/tdegi/OneDrive/Desktop/Bootcamp/Repository/fifth-street/client/src/components/ProductList/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Image, Container, Dropdown } from 'react-bootstrap';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport ProductItem from '../ProductItem';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport { idbPromise } from '../../utils/helpers';\nimport CategoryMenu from '../CategoryMenu';\n// import Sort from '../Sort';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    //if there's data to be stored\n    if (data) {\n      //store it in the global state object\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      //but also take each product and save it to IndexedDB using the helper function\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n      //add else if to check if 'loading' is undefined in 'useQuery()' hook\n    } else if (!loading) {\n      //since we're offline, get all of the data from the 'products' store\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <Container>\n      <Image\n        src={require(`../../assets/logo.jpg`)}\n        fluid\n        className='background-image'\n      />\n      <CategoryMenu />\n      \n      <div className=\"my-2\">\n        <h2>Our Products:</h2>\n        {state.products.length ? (\n          <div className=\"flex-row\">\n            {filterProducts().map((product) => (\n              <ProductItem\n                // key={product._id}\n                _id={product._id}\n                image={product.image}\n                name={product.name}\n                price={product.price}\n                quantity={product.quantity}\n              />\n            ))}\n          </div>\n        ) : (\n          <h3>You haven't added any products yet!</h3>\n        )}\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      </div>\n    </Container>\n  );\n}\n\nexport default ProductList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}