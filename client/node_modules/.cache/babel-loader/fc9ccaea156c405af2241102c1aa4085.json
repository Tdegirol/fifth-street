{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tdegi\\\\OneDrive\\\\Desktop\\\\Bootcamp\\\\Repository\\\\fifth-street\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { idbPromise } from '../../utils/helpers';\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    //if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      //execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"padding-bottom\": \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Choose a Category:\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"All\"), categories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    key: item._id,\n    onClick: () => {\n      handleClick(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, item.name)));\n}\nexport default CategoryMenu;","map":{"version":3,"names":["React","useEffect","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useQuery","QUERY_CATEGORIES","useStoreContext","idbPromise","CategoryMenu","state","dispatch","categories","loading","data","categoryData","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"sources":["C:/Users/tdegi/OneDrive/Desktop/Bootcamp/Repository/fifth-street/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n  const { categories } = state;\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    //if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      //execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div padding-bottom='10px'>\n      <h2>Choose a Category:</h2>\n      {\n        <button>All</button>\n      }\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,iBAAiB,EAAEC,uBAAuB,QAAQ,qBAAqB;AAChF,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,SAASC,YAAY,GAAG;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,eAAe,EAAE;EAC3C,MAAM;IAAEK;EAAW,CAAC,GAAGF,KAAK;EAC5B,MAAM;IAAEG,OAAO;IAAEC,IAAI,EAAEC;EAAa,CAAC,GAAGV,QAAQ,CAACC,gBAAgB,CAAC;EAElEJ,SAAS,CAAC,MAAM;IACd;IACA,IAAIa,YAAY,EAAE;MAChB;MACAJ,QAAQ,CAAC;QACPK,IAAI,EAAEb,iBAAiB;QACvBS,UAAU,EAAEG,YAAY,CAACH;MAC3B,CAAC,CAAC;MACFG,YAAY,CAACH,UAAU,CAACK,OAAO,CAACC,QAAQ,IAAI;QAC1CV,UAAU,CAAC,YAAY,EAAE,KAAK,EAAEU,QAAQ,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,CAACL,OAAO,EAAE;MACnBL,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAACW,IAAI,CAACP,UAAU,IAAI;QACjDD,QAAQ,CAAC;UACPK,IAAI,EAAEb,iBAAiB;UACvBS,UAAU,EAAEA;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACG,YAAY,EAAEF,OAAO,EAAEF,QAAQ,CAAC,CAAC;EAErC,MAAMS,WAAW,GAAGC,EAAE,IAAI;IACxBV,QAAQ,CAAC;MACPK,IAAI,EAAEZ,uBAAuB;MAC7BkB,eAAe,EAAED;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAK,kBAAe,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,oBAAkB,CAAK,eAEzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,KAAG,CAAS,EAErBT,UAAU,CAACW,GAAG,CAAEC,IAAI,iBACnB;IACE,GAAG,EAAEA,IAAI,CAACC,GAAI;IACd,OAAO,EAAE,MAAM;MACbL,WAAW,CAACI,IAAI,CAACC,GAAG,CAAC;IACvB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEDD,IAAI,CAACE,IAAI,CAEb,CAAC,CACE;AAEV;AAEA,eAAejB,YAAY"},"metadata":{},"sourceType":"module"}